{% extends "jury/base.html.twig" %}

{% block title %}Análise - Concurso {{ current_contest.shortname | default('') }} - {{ parent() }}{% endblock %}

{% block extrahead %}
{{ parent() }}
<link rel="stylesheet" href="{{asset('css/nv.d3.min.css')}}">
<script src="{{asset('js/d3.min.js')}}"></script>
<script src="{{asset('js/nv.d3.min.js')}}"></script>
<script src="{{asset('js/FileSaver.min.js')}}"></script>
<style>
.card-body.tablecard{
  overflow-y: auto;
  height: 500px;
  max-height: 500px;
}
.truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

table tr a {
    color: inherit;
}
</style>
<script>
$(function() {
    $('[data-bs-toggle="popover"]').popover({
      trigger: 'hover',
      html: true
    })
})
</script>
{% endblock %}

{% block content %}
      <h1>{{ current_contest.name }}</h1>
      {% include 'jury/partials/analysis_filter.html.twig' %}
    </div>
    <div class="col-md-3 mt-3">
      <div class="card">
        <div class="card-header">
          Estatísticas do Concurso
        </div>
        <div class="card-body">
          <abbr data-bs-toggle="popover" data-bs-placement="bottom" data-bs-title="Índice de Miséria" data-bs-content="
            Esta é uma medida de quão 'entediados' os participantes estão. É o número médio de
            minutos-pessoa gastos inutilmente a tentar resolver problemas no final do concurso.
            <br>
            Calculado como:<br>
            média entre todas as equipas de [3 pessoas x (número de minutos decorridos - minuto em que o último problema foi resolvido pela equipa t)]
          ">Índice de miséria</abbr>: {{misc.misery_index|number_format(0)}} minutos<br>
          # Submissões: {{ misc.total_submissions }}<br>
          # Submissões Aceites: {{ misc.total_accepted }} <span class="text-muted">(~{{ (misc.total_submissions>0 ? (misc.total_accepted/misc.total_submissions)*100:0)|number_format(0) }}%)</span><br>
          # de Equipas: {{ misc.num_teams }}<br>
        </div>
      </div>
    </div>
    <div class="col-md-4 mt-3" id="graph_languages">
      <div class="card">
        <div class="card-header">
          Estatísticas por Linguagem
            <a href="{{ path('analysis_languages', {'view': view}) }}" class="btn btn-sm btn-outline-primary">
              <i class="fas fa-list"></i>
              Detalhes
            </a>
        </div>
        <div class="card-body">
          <svg style="height: 300px"></svg>
        </div>
      </div>
    </div>
    <div class="col-md-5 mt-3" id="graph_problems">
      <div class="card">
        <div class="card-header">
          Problemas Tentados/Resolvidos
        </div>
        <div class="card-body">
          <svg style="height: 300px"></svg>
        </div>
      </div>
    </div>
    <div class="col-md-12 mt-3" id="graph_submissions">
      <div class="card">
        <div class="card-header">
          Submissões ao Longo do Tempo
        </div>
        <div class="card-body">
        <svg style="height: 400px"></svg>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 mt-3 mb-3">
      <div class="card">
        <div class="card-header">
          Problemas
        </div>
        <div class="card-body tablecard">
          <table class="table table-sm table-striped table-hover table-full-clickable-cell">
            <thead>
              <tr>
                <th scope="col">ID</th>
                <th scope="col">nome</th>
                <th scope="col">limite<br>de tempo</th>
                <th scope="col">limite<br>de memória</th>
                <th scope="col">casos<br>de teste</th>
                <th scope="col"># <br>tentativas/soluções</th>
                <th scope="col"># equipas<br>tentadas/resolvidas</th>
              </tr>
            </thead>
            <tbody>
            {% for p in problems %}
              {% set id=p.probid %}
              <tr>
                {% set link = path('analysis_problem', {'probid': id, 'view': view}) %}
                <td scope="row"><a href="{{path('analysis_problem', {'probid': id, 'view': view}) }}">{{ id }}</a></td>
                <td><a href="{{ link }}">{{ p | problemBadge }} {{ p.problem.name }}</a></td>
                <td><a href="{{ link }}">{{ p.problem.timelimit }}</a></td>
                <td><a href="{{ link }}">{{ p.problem.memlimit|default('default') }}</a></td>
                <td><a href="{{ link }}">{{ misc.problem_num_testcases[id] }}</a></td>
                <td><a href="{{ link }}">{{ misc.problem_attempts[id]|default(0) }} / {{ misc.problem_solutions[id]|default(0) }}</a></td>
                <td><a href="{{ link }}">{{ misc.problem_stats.teams_attempted[id]|default([])|length }} / {{ misc.problem_stats.teams_solved[id]|default([])|length }}</a></td>
              </tr>
            {% endfor %}
            </tbody>
          </table>
        </div>
      </div>
    </div>
    <div class="col-md-6 mt-3 mb-3">
      <div class="card">
        <div class="card-header">
          Equipas
        </div>
        <div class="card-body tablecard">
          <table class="table table-sm table-striped table-hover table-full-clickable-cell">
            <thead>
              <tr>
                <th scope="col">ID</th>
                <th scope="col">afiliação</th>
                <th scope="col" style="max-width: 200px">nome</th>
                <th scope="col">#<br>enviado/correto</th>
                <th scope="col"># problemas<br>tentados/resolvidos</th>
                <th scope="col">Índice<br>de Miséria</th>
              </tr>
            </thead>
            <tbody>
            {% for t in teams %}
              {% set id=t.teamid %}
              <tr>
                {% set link = path('analysis_team', {'team':id}) %}
                <td scope="row" style="text-align: right;"><a href="{{ link }}">{{ t | entityIdBadge('t') }}</a></td>
                <td><a href="{{ link }}">{% if t.affiliation %}{{ t.affiliation.name }}{% else %}-{% endif %}</a></td>
                <td class="truncate" style="max-width: 200px"><a href="{{ link }}">{{ t.effectiveName }}</a></td>
                <td><a href="{{ link }}">{{ misc.team_stats[id].total_submitted }} / {{ misc.team_stats[id].total_accepted }}</a></td>
                <td><a href="{{ link }}">{{ misc.team_stats[id].problems_submitted|length }} / {{ misc.team_stats[id].problems_accepted|length }}</a></td>
                <td><a href="{{ link }}">{{ misc.team_stats[id].misery_index|number_format(0) }}</a></td>
              </tr>
            {% endfor %}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
      <div class="col-md-6 mt-3 mb-3">
          <div class="card">
              <div class="card-header">
                  Julgamentos Atrasados (em mais de {{ delayed_judgings.delay }}s)
              </div>
              <div class="card-body tablecard">
                  {% if delayed_judgings.data|length > 0 %}
                      <table class="table table-sm table-striped table-hover table-full-clickable-cell">
                          <thead>
                          <tr>
                              <th scope="col">ID da submissão</th>
                              <th scope="col">ID do julgamento</th>
                              <th scope="col">hora da submissão</th>
                              <th scope="col">nº de julgamentos</th>
                              <th scope="col">tempo para<br/>primeiro julgamento</th>
                          </tr>
                          </thead>
                          <tbody>
                          {% for j in delayed_judgings.data %}
                              {% set id=j.submitid %}
                              <tr>
                                  {% set link = path('jury_submission', {'submitId': id}) %}
                                  <td scope="row"><a href="{{ link }}">{{ id }}</a></td>
                                  <td><a href="{{ link }}">{{ j.judgingid }}</a></td>
                                  <td><a href="{{ link }}">{{ j.submittime | printtime }}</a></td>
                                  <td><a href="{{ link }}">{{ j.num_judgings }}</a></td>
                                  <td><a href="{{ link }}">{{ j.timediff | number_format(2) }}s</a></td>
                              </tr>
                          {% endfor %}
                          </tbody>
                      </table>
                      {% if delayed_judgings.overflow > 0 %}
                          <div class="alert alert-warning">Existem mais {{ delayed_judgings.overflow }} julgamentos atrasados que não são mostrados.</div>
                      {% endif %}
                  {% else %}
                      <div class="alert alert-warning">Não há julgamentos atrasados até agora.</div>
                  {% endif %}
              </div>
          </div>
{% endblock %}

{% block extrafooter %}
<script>
{%
set colors = {
  'correct':         '#01df01',
  'wrong-answer':    'red',
  'timelimit':       'orange',
  'run-error':       '#ff3399',
  'compiler-error': 'grey',
  'no-output':       'purple',
  'frozen':          'blue',
  'output-limit':    'black',
}
%}


//////////////////////////////////////
// Results by language
// bar graph, x axis is language, y axis is # of solutions
// mutlibar, one for attempts, one for solutions
var language_stats = [
  {
    key: "Tentativas",
    color: 'red',
    values: [
      {% for lang,count in misc.language_stats.total_submissions %}
        {
          "label" : "{{lang}}",
          "value" : {{ count }},
        },
      {% endfor %}
    ]
  },
  {
    key: "Aceites",
    color: 'green',
    values: [
      {% for lang,count in misc.language_stats.total_solutions %}
        {
          "label" : "{{lang}}",
          "value" : {{ count }},
        },
      {% endfor %}
    ]
  }
];
nv.addGraph(function() {
  var chart = nv.models.multiBarChart()
      .x(function(d) { return d.label })
      .y(function(d) { return d.value })
      // .valueFormat(d3.format('.0f'))
      // .staggerLabels(run_max_times[0].values.length > 2)
      .showControls(false)
      .reduceXTicks(false)
      .margin({bottom: 90})
      .duration(250)
      ;
  chart.yAxis
    .tickFormat(d3.format('.0f'))
    .axisLabel('# de Submissões');
  chart.xAxis.axisLabel("Linguagem");
  d3.select('#graph_languages svg')
      .datum(language_stats)
      .call(chart);
  nv.utils.windowResize(chart.update);
  return chart;
});


//////////////////////////////////////
// Results by problem
// Graph, multibar chart, x axis is problem id/shortname, y axis is # of teams
// one bar for #teams attempted(red), second bar for solved(green)
var problem_stats = [
  {
    key: "Tentados",
    color: 'red',
    values: [
      {% for prob in problems %}
        {
          "label" : "{{prob.shortname}}",
          "value" : {{ misc.problem_stats.teams_attempted[prob.probid]|default([])|length }},
        },
      {% endfor %}
    ]
  },
  {
    key: "Resolvidos",
    color: 'green',
    values: [
      {% for prob in problems %}
        {
          "label" : "{{prob.shortname}}",
          "value" : {{ misc.problem_stats.teams_solved[prob.probid]|default([])|length }},
        },
      {% endfor %}
    ]
  }
];
nv.addGraph(function() {
  var chart = nv.models.multiBarChart()
      .x(function(d) { return d.label })
      .y(function(d) { return d.value })
      // .valueFormat(d3.format('.0f'))
      // .staggerLabels(run_max_times[0].values.length > 2)
      .showControls(false)
      .reduceXTicks(false)
      .margin({bottom: 90})
      .duration(250)
      ;
  chart.yAxis
    .tickFormat(d3.format('.0f'))
    .axisLabel('# de Equipas');
  chart.xAxis.axisLabel("Problema");
  d3.select('#graph_problems svg')
      .datum(problem_stats)
      .call(chart);
  // Hide bars with 0 height after rendering
  chart.dispatch.on('renderEnd', function() {
    d3.selectAll('#graph_problems .nv-bar').each(function(d) {
      if (d.value === 0) {
        d3.select(this).attr('height', 0);
        d3.select(this).attr('y', chart.yAxis.scale()(0));
      }
    });
  });
  nv.utils.windowResize(chart.update);
  return chart;
});

//////////////////////////////////////
// Submissions over time

const submission_stats = [
  {% for result in ['correct', 'wrong-answer', 'timelimit', 'run-error', 'compiler-error', 'no-output'] %}
  {
    key: "{{result}}",
    color: "{{colors[result]}}",
    values: []
  },
  {% endfor %}
];
const contest_start_time = {{ current_contest.starttime }};
const contest_duration_seconds = {{ (current_contest.endtime - current_contest.starttime) | round(0, 'ceil') }};
const submissions = [
  {% for submission in submissions %}
  {
    result: "{{ submission.result }}",
    submittime: {{ submission.submittime }},
  }{{ loop.last ? '' : ',' }}
  {% endfor %}
];
createSubmissionGraph(submission_stats, contest_start_time, contest_duration_seconds, submissions);

</script>
{% include 'jury/analysis/download_graphs.html.twig' %}
{% endblock %}