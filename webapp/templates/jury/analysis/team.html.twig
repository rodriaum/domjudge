{% extends "jury/base.html.twig" %}

{% block title %}Análise - Equipa {{ team.effectiveName }} {{ current_contest.shortname |
default('') }} - {{ parent() }}{% endblock %}

{% block extrahead %}
{{ parent() }}
<link rel="stylesheet" href="{{asset('css/nv.d3.min.css')}}">
<script src="{{asset('js/d3.min.js')}}"></script>
<script src="{{asset('js/nv.d3.min.js')}}"></script>
<script src="{{asset('js/FileSaver.min.js')}}"></script>
<style>
.row.equal {
  display: flex;
  flex-wrap: wrap;
}
.card {
  height: 100%;
}

/* Don't show x-axis ticks/ticklines for max runtimes chart*/
#maxruntime .nv-x.nv-axis .tick {
  display: none;
}
</style>
{% endblock %}

{% block content %}
      <h1>Equipa {{ team.teamid }}: {{ team.effectiveName }}</h1>
    </div>
    <div class="col-lg-3 col-sm-6 mt-3">
      <div class="card">
        <div class="card-header">
          Estatísticas Diversas
        </div>
        <div class="card-body">
          <dl class="row">
            <dt class="col-sm-6"># Submissões</dt>
            <dd class="col-sm-6">{{ submissions|length }}</dd>

            <dt class="col-sm-6"># Corretas</dt>
            <dd class="col-sm-6">{{ results['correct']|default(0) }} <span class="text-muted">({{ misc.correct_percentage|number_format(2) }}%)</span></dd>
          </dl>
        </div>
      </div>
    </div>
    <div class="col-lg-4 col-sm-6 mt-3" id="judging_results">
      <div class="card">
        <div class="card-header">
          Resultados do Julgamento
        </div>
        <div class="card-body">
          <svg style="height: 275px"></svg>
        </div>
      </div>
    </div>
    <div class="col-lg-5 col-sm-12 mt-3" id="submission_times">
      <div class="card">
        <div class="card-header">
          Submissões ao longo do Tempo
        </div>
        <div class="card-body">
            <svg style="height: 275px"></svg>
        </div>
      </div>
    </div>
  </div>
  <div class="row equal">
  {% for problem in problems %}
      <div class="col-3 mt-3" id="maxruntime_{{problem.probid}}">
        <div class="card">
          <div class="card-header">
            Tempos Máximos de Execução para o problema {{ problem.name }}
          </div>
          <div class="card-body">
            <svg style="height: 200px"></svg>
          </div>
        </div>
      </div>
  {% endfor %}
  </div>
{% endblock %}

{% block extrafooter %}
<script>
{%
set colors = {
  'correct':         '#01df01',
  'wrong-answer':    'red',
  'timelimit':       'orange',
  'run-error':       '#ff3399',
  'compiler-error': 'grey',
  'no-output':       'purple',
  'frozen':          'blue',
  'output-limit':    'black',
  'aborted':         'maroon',
}
%}

$(function(){
{% for problem in problems %}
    var run_max_times_{{problem.probid}} = [
      {
        key: "Max runtimes",
        values: [
          {% for submission in misc.max_run_times[problem.probid]|default([]) %}
          {
            "label" : "{{ submission.language.name }}",
            "value" : {{ submission.max_runtime }},
            "submission_id": {{ submission.submitid }},
            "runtime": {{ submission.runtime }}
          },
          {% endfor %}
        ]
      }
    ];
    nv.addGraph(function() {
      var chart = nv.models.discreteBarChart()
          .x(function(d) { return d.label })
          .y(function(d) { return d.value })
          .staggerLabels(true)
          .valueFormat(d3.format('.3f'))
          .margin({bottom: 120})
          .duration(250)
          ;
      chart.yAxis
        .tickFormat(d3.format('.3f'))
        .axisLabel('Tempo de Execução (s)');
      chart.xAxis.axisLabel("Linguagem");
      d3.select('#maxruntime_{{problem.probid}} svg')
          .datum(run_max_times_{{problem.probid}})
          .call(chart);
      nv.utils.windowResize(chart.update);
      return chart;
    });
{% endfor %}

//////////////////////////////////////
// Results by type (pie chart)
var judging_results = [
  {% for result,count in results %}
  {
    key: "{{result}}",
    y: {{ count }},
    color: "{{colors[result]}}"
  },
  {% endfor %}
];
nv.addGraph(function() {
  var chart = nv.models.pieChart()
      .x(function(d) { return d.key })
      .y(function(d) { return d.y })
      .showLabels(true)
      .labelThreshold(.05)
      .labelType("percent")
      .donut(true)
      .donutRatio(0.35)
      .showLegend(true)
      ;
  chart.legend.vers("furious");
  d3.select('#judging_results svg')
      .datum(judging_results)
      .transition().duration(350)
      .call(chart);
  return chart;
});

//////////////////////////////////////
// Submissions over time
const submission_stats = [
  {% for result in ['correct', 'wrong-answer', 'timelimit', 'run-error', 'compiler-error', 'no-output'] %}
  {
    key: "{{result}}",
    color: "{{colors[result]}}",
    values: []
  },
  {% endfor %}
];
const contest_start_time = {{ current_contest.starttime }};
const contest_duration_seconds = {{ (current_contest.endtime - current_contest.starttime) | round(0, 'ceil') }};
const submissions = [
  {% for submission in submissions %}
  {
    result: "{{ submission.result }}",
    submittime: {{ submission.submittime }},
  }{{ loop.last ? '' : ',' }}
  {% endfor %}
];
createSubmissionGraph(submission_stats, contest_start_time, contest_duration_seconds, submissions, '#submission_times');
</script>
{% include 'jury/analysis/download_graphs.html.twig' %}
{% endblock %}